@using ShoppingCartStarter.Shared.Cart
@using ShoppingCartStarter.Shared.Cart.LineItem
@inject HttpClient Http

<div class="d-flex mt-4 border-bottom pb-4">
    <div class="flex-shrink-0">
        <img src="/images/@Details.Image" altText="@Details.Name"
             class="mr-3" alt="Smart Speaker" />
    </div>
    <div class="flex-grow-1 ms-3">
        <h2 class="">@Details.Name</h2>
        <div class="d-flex align-items-end gap-2">
            <div>
                <label for="qty" class="mr-2">Qty</label>
                <Quantity Value="Details.Quantity" ValueChanged="QuantityChanged" />
            </div>
            <button class="btn btn-danger" @onclick="OnDeleteClicked">Delete</button>
        </div>
    </div>
    <div>
        £@Details.Price
    </div>
</div>

@code {
    [Parameter]
    public Details.Model.LineItem Details { get; set; }

    [Parameter]
    public EventCallback<Details.Model.LineItem> OnDeleted { get; set; }

    [Parameter]
    public EventCallback OnQuantityChanged { get; set; }

    protected async Task OnDeleteClicked()
    {
        await Http.DeleteAsync($"api/cart/lines/{Details.Id}");
        await OnDeleted.InvokeAsync(Details);
    }

    protected async Task QuantityChanged(int value)
    {
        await Http.PutAsJsonAsync("api/cart/lines", new Update.Command
            {
                Id = Details.Id,
                Quantity = value
            });

        await OnQuantityChanged.InvokeAsync(EventArgs.Empty);
    }
}